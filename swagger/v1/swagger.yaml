---
openapi: 3.0.1
info:
  title: Movie API
  version: v1
  description: A REST API for managing movies and watchlists with JWT authentication
paths:
  "/api/v1/movies":
    get:
      summary: List movies
      tags:
      - Movies
      description: Retrieve all movies
      parameters:
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per_page"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/movie"
                  meta:
                    "$ref": "#/components/schemas/pagination_metadata"
                required:
                - data
                - meta
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                    description: HTTP status code
                  error:
                    type: string
                    example: Internal Server Error
                    description: Error message
                required:
                - status
                - error
    post:
      summary: Create a movie
      tags:
      - Movies
      description: Create a new movie
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    "$ref": "#/components/schemas/movie"
                required:
                - data
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: Title can't be blank
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                movie:
                  type: object
                  properties:
                    title:
                      type: string
                      example: The Matrix
                    description:
                      type: string
                      example: A computer hacker learns from mysterious rebels about
                        the true nature of his reality.
                    release_year:
                      type: integer
                      example: 1999
                  required:
                  - title
              required:
              - movie
servers:
- url: http://localhost:3000
  description: Development server
components:
  schemas:
    movie:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: The Matrix
        description:
          type: string
          example: A computer hacker learns about....
        release_year:
          type: integer
          example: 1999
        created_at:
          type: string
          format: date_time
          example: '2023-01-01T00:00:00Z'
        updated_at:
          type: string
          format: date_time
          example: '2023-01-02T00:00:00Z'
      required:
      - id
      - title
    pagination_metadata:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        total_pages:
          type: integer
          example: 3
        total_count:
          type: integer
          example: 50
        per_page:
          type: integer
          example: 10
      required:
      - current_page
      - total_pages
      - total_count
      - per_page
  parameters:
    page:
      name: page
      in: query
      type: integer
      description: 'Page number (default: 1)'
      required: false
      example: 1
    per_page:
      name: per_page
      in: query
      type: integer
      description: 'Items per page (default: 2, max: 100)'
      required: false
      example: 2
